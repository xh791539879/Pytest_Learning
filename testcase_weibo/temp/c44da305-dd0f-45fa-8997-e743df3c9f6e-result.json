{"name": "test_weibo_requests[case_info0]", "status": "failed", "statusDetails": {"message": "Failed: 测试用例：网红狗艾特去世 -正例异常，argument of type 'NoneType' is not iterable", "trace": "self = <testcase_weibo.test_qushi_data.TestWeiboRequests object at 0x00000259233BD310>\ncase_info = {'expected_desc': '兽医师称：艾特是窒息死亡，与年纪或有没有病无关。', 'name': '网红狗艾特去世 -正例', 'request': {'data_or_params': {'page_number': 1, ...0, 'trend_word': '网红狗艾特去世'}, 'method': 'get', 'url': 'http://10.85.93.234:58881/api/big_hot'}, 'target_category': 9962}\n\n    @pytest.mark.parametrize('case_info',read_yaml('testcase_weibo/request.yaml'))\n    def test_weibo_requests(self,case_info):\n        name =case_info['name']\n        method=case_info['request']['method']\n        url=case_info['request']['url']\n        data_or_params=case_info['request']['data_or_params']\n        target_category = case_info['target_category']\n        expected_desc = case_info['expected_desc']\n    \n        logger_name = f\"TestWeiboRequests.{name}\"\n    \n        LogUtil.info(logger_name,f'测试用例：{name},开始执行')\n        LogUtil.info(logger_name,f'请求方法：{method},请求地址{url},请求参数{data_or_params}）')\n        try:\n            if method=='post':\n                response =  send_all_request(method=method,url=url,data=data_or_params)\n            else:\n                response = send_all_request(method=method,url=url,params=data_or_params)\n            assert response.status_code==200,f'测试用例：{name}:响应状态吗码不是200，而是{response.status_code}'\n    \n            response_data = response.json()\n            # target_category = '9962'\n            target_entry = None\n            for entry in response_data['data']:\n                if entry['category']==target_category:\n                    target_entry = entry\n                    break\n    \n>           if 'data' in target_entry and 'data' in target_entry['data'] and 'material' in target_entry['data']['data']:\nE           TypeError: argument of type 'NoneType' is not iterable\n\ntest_qushi_data.py:41: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase_weibo.test_qushi_data.TestWeiboRequests object at 0x00000259233BD310>\ncase_info = {'expected_desc': '兽医师称：艾特是窒息死亡，与年纪或有没有病无关。', 'name': '网红狗艾特去世 -正例', 'request': {'data_or_params': {'page_number': 1, ...0, 'trend_word': '网红狗艾特去世'}, 'method': 'get', 'url': 'http://10.85.93.234:58881/api/big_hot'}, 'target_category': 9962}\n\n    @pytest.mark.parametrize('case_info',read_yaml('testcase_weibo/request.yaml'))\n    def test_weibo_requests(self,case_info):\n        name =case_info['name']\n        method=case_info['request']['method']\n        url=case_info['request']['url']\n        data_or_params=case_info['request']['data_or_params']\n        target_category = case_info['target_category']\n        expected_desc = case_info['expected_desc']\n    \n        logger_name = f\"TestWeiboRequests.{name}\"\n    \n        LogUtil.info(logger_name,f'测试用例：{name},开始执行')\n        LogUtil.info(logger_name,f'请求方法：{method},请求地址{url},请求参数{data_or_params}）')\n        try:\n            if method=='post':\n                response =  send_all_request(method=method,url=url,data=data_or_params)\n            else:\n                response = send_all_request(method=method,url=url,params=data_or_params)\n            assert response.status_code==200,f'测试用例：{name}:响应状态吗码不是200，而是{response.status_code}'\n    \n            response_data = response.json()\n            # target_category = '9962'\n            target_entry = None\n            for entry in response_data['data']:\n                if entry['category']==target_category:\n                    target_entry = entry\n                    break\n    \n            if 'data' in target_entry and 'data' in target_entry['data'] and 'material' in target_entry['data']['data']:\n                material_data = target_entry['data']['data']['material']\n                LogUtil.info(logger_name,f'测试用例：{name}数据结构符合预期')\n            else:\n                assert False, f'测试用例：{name}：数据结构不符合预期'\n    \n            assert target_entry is not None,f'测试用例{name}:没找到9962这个字段'\n            # expected_desc = \"兽医师称：艾特是窒息死亡，与年纪或有没有病无关。\"\n            assert material_data[0]['desc']==expected_desc,f'测试用例：{name}：desc断言失败,期望值为{expected_desc},实际desc为{material_data[0]['desc']}'\n            LogUtil.info(logger_name,f'测试用例：{name},执行成功')\n    \n        except AssertionError as e:\n            LogUtil.error(logger_name,f'测试用例{name}，测试失败:{e}')\n            pytest.fail(str(e))\n        except Exception as e:\n            LogUtil.error(logger_name,f'测试用例：{name}异常，{e}')\n>           pytest.fail(f'测试用例：{name}异常，{e}')\nE           Failed: 测试用例：网红狗艾特去世 -正例异常，argument of type 'NoneType' is not iterable\n\ntest_qushi_data.py:57: Failed"}, "attachments": [{"name": "log", "source": "d9ac8082-3f78-427c-92f0-82006a55072c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_info", "value": "{'name': '网红狗艾特去世 -正例', 'request': {'method': 'get', 'url': 'http://10.85.93.234:58881/api/big_hot', 'data_or_params': {'tab': 0, 'page_number': 1, 'page_size': 10, 'trend_word': '网红狗艾特去世'}}, 'target_category': 9962, 'expected_desc': '兽医师称：艾特是窒息死亡，与年纪或有没有病无关。'}"}], "start": 1738827481851, "stop": 1738827482128, "uuid": "289d0ab3-645d-4651-93e1-d56d35aa4914", "historyId": "0b250c0d7e52757e65bd43e8a0dcc20a", "testCaseId": "7dfc4a7d038333bb22beae21149b0674", "fullName": "testcase_weibo.test_qushi_data.TestWeiboRequests#test_weibo_requests", "labels": [{"name": "parentSuite", "value": "testcase_weibo"}, {"name": "suite", "value": "test_qushi_data"}, {"name": "subSuite", "value": "TestWeiboRequests"}, {"name": "host", "value": "MININT-TB0K1R0"}, {"name": "thread", "value": "16080-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase_weibo.test_qushi_data"}]}